@model DouVoitOn.Models.PanneauInput

@{
    ViewData["Title"] = "Panneau";
}

<h1>Créer un nouveau panneau</h1>

<p>Vous pouvez demander la création d'un nouveau panneau à l'aide du formulaire.<br />
   Le nouveau panneau ne sera pas activé de suite, un administrateur doit l'approuver pour éviter les doublons.
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <h3>Position du panneau</h3>

        <p>Déplacez le marqueur sur la carte pour poser le panneau à sa place.</p>

        <div id="map_new_panneau" style=" height: 300px"></div>

        <br />

        <div class="form-group row">
            @Html.LabelFor(model => model.panneau.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.panneau.Latitude, new { htmlAttributes = new { @id = "latitude_field", @class = "form-control", placeholder = "---", @readonly = true } })
                @Html.ValidationMessageFor(model => model.panneau.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.panneau.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.panneau.Longitude, new { htmlAttributes = new { @id = "longitude_field", @class = "form-control", placeholder = "---", @readonly = true } })
                @Html.ValidationMessageFor(model => model.panneau.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.panneau.Pays, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.panneau.Pays, new { htmlAttributes = new { @id = "Pays_field", @class = "form-control", placeholder = "---", @readonly = true } })
                @Html.ValidationMessageFor(model => model.panneau.Pays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.panneau.Ville, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.panneau.Ville, new { htmlAttributes = new { @id = "Ville_field", @class = "form-control", placeholder = "---", @readonly = true } })
                @Html.ValidationMessageFor(model => model.panneau.Ville, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.panneau.Adresse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.panneau.Adresse, new { htmlAttributes = new { @id = "Adresse_field", @class = "form-control", placeholder = "---", @readonly = true } })
                @Html.ValidationMessageFor(model => model.panneau.Adresse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.panneau.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.panneau.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.panneau.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <h3>Lieux indiqués</h3>


        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#AddLieuModal">
            Ajouter un lieu à ce panneau
        </button>

        <table id="Lieux" class="table table-striped table-dark">
            <tr>
                <th>@Html.DisplayNameFor(model => model.Lieux[0].Lieu.Id)</th>
                <th>@Html.DisplayNameFor(model => model.Lieux[0].Lieu.Nom)</th>
                <th>Type de Panneau
                    <a href="/Documentation/TypePanneaux" target="_blank">
                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="20" height="20" viewBox="0 0 50 50">
                        <path fill="#FFFFFF" d="M 25 2 C 12.309295 2 2 12.309295 2 25 C 2 37.690705 12.309295 48 25 48 C 37.690705 48 48 37.690705 48 25 C 48 12.309295 37.690705 2 25 2 z M 25 4 C 36.609824 4 46 13.390176 46 25 C 46 36.609824 36.609824 46 25 46 C 13.390176 46 4 36.609824 4 25 C 4 13.390176 13.390176 4 25 4 z M 25 11 A 3 3 0 0 0 22 14 A 3 3 0 0 0 25 17 A 3 3 0 0 0 28 14 A 3 3 0 0 0 25 11 z M 21 21 L 21 23 L 22 23 L 23 23 L 23 36 L 22 36 L 21 36 L 21 38 L 22 38 L 23 38 L 27 38 L 28 38 L 29 38 L 29 36 L 28 36 L 27 36 L 27 21 L 26 21 L 22 21 L 21 21 z"></path>
                    </svg></a>
                </th>
                <th>Nomenclature Route</th>
                <th>Distance (km)</th>
                <th></th>
            </tr>
        </table>



        <div class="form-group row">
            <div class="col-sm-10">
            <button type="submit" id="btn_creation" class="btn btn-primary" disabled>Soumettre</button>
            </div>
        </div>


        

     </div>


    <div class="modal" id="AddLieuModal" tabindex="-1" role="dialog" aria-labelledby="AddLieuModalTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="AddLieuModalTitle">Ajouter un lieu au panneau</h5>
                    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="selectlieu">Choisissez un lieu</label>
                        <select id="selectlieu">
                            @foreach (var lieu in ViewBag.Lieux)
                            {
                                if (lieu.Activated)
                                {
                                    <option value="@lieu.Id">@lieu.Ville - @lieu.Nom</option>
                                }
                                else
                                {
                                    <option value="@lieu.Id">
                                        [PAS VALIDÉ] @lieu.Ville - @lieu.Nom
                                    </option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button onclick="addRow()" type="button" class="btn btn-primary" data-bs-dismiss="modal">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    
}



<script>
    var map = L.map('map_new_panneau').setView([46.86, 3.16], 4);
    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    var myMarker = L.marker([46.86, 3.16], { title: "Nouveau Panneau", alt: "Nouveau Panneau", draggable: true })
        .addTo(map)
        .on('dragend', function () {
            $("#latitude_field").val(myMarker.getLatLng().lat);
            $("#longitude_field").val(myMarker.getLatLng().lng);
            $("#btn_creation").prop('disabled', false)

            //recherche données géo
            $.ajax({
                url: "https://nominatim.openstreetmap.org/reverse?lat=" + myMarker.getLatLng().lat + "&lon=" + myMarker.getLatLng().lng + "&format=json",
                method: "GET",
                dataType: "json"
            }).done(function (response) {
                $("#Pays_field").val(response["address"]["country"]);
                $("#Ville_field").val(response["address"]["village"]);
                $("#Adresse_field").val(response["display_name"]);

                if (response["address"]["village"] == null)
                {
                    $("#Ville_field").val(response["address"]["city"]);
                    if (response["address"]["city"] == null) 
                    {
                        $("#Ville_field").val(response["address"]["municipality"]);
                        if (response["address"]["municipality"] == null) {
                            $("#Ville_field").val(response["address"]["state"]);
                        }
                    }
                }


                var nom = $('#Name_field').val();
                var city = $("#Ville_field").val();
                if(nom == "") { nom = "Centre"}
                $("#confirm_name").text(city + " - " + nom);
            })
        });


    var counter = 0;
    var typesPanneauxOptions = '<option value="" selected>Choisissez un type</option>';
    JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.TypesPanneaux))').forEach((type) => typesPanneauxOptions = typesPanneauxOptions + '<option value="'+type.id+'">'+type.nom+" - "+type.description+'</option>');

    function addRow() {
        var table = document.getElementById("Lieux");
        var row = table.insertRow(-1);

        var cell1 = row.insertCell(0);
        cell1.innerHTML = '<input type="text" name = "Lieux[' + counter + '].Lieu.Id" value = "' + $("#selectlieu").val() + '" hidden />' + $("#selectlieu").val() +
            '<input type="text" name = "Lieux[' + counter + '].Id" value = "0" hidden />';

        var cell2 = row.insertCell(1);
        var nom = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.Lieux))').find((e) => e.id == $("#selectlieu").val()).nom
        var ville = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.Lieux))').find((e) => e.id == $("#selectlieu").val()).ville
        var valide = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.Lieux))').find((e) => e.id == $("#selectlieu").val()).activated
        if (valide == 0) { cell2.innerHTML = ville + " - " + nom + ' <span class="badge badge-warning" style="background-color:#dc3545;">Lieu non validé</span>' } else { cell2.innerHTML = ville + " - " + nom }


        var cell3 = row.insertCell(2);
        cell3.innerHTML = '<select style="max-width: 300px;" name="Lieux[' + counter + '].typePanneau.Id" required/>'
        + typesPanneauxOptions + '</select>';

        var cell4 = row.insertCell(3);
        cell4.innerHTML = '<input type="text" name="Lieux[' + counter + '].NomRoute" placeholder="D1004" value=""/>';

        var cell5 = row.insertCell(4);
        cell5.innerHTML = '<input type="number" name="Lieux[' + counter + '].Distance" value="-1" />';

        var cell6 = row.insertCell(5);
        cell6.innerHTML = '<img onclick="RemoveRow('+counter+')" src="/media/delete.png"/>';
        counter++;
    }

    function RemoveRow(id) {
        var table = document.getElementById("Lieux");
        var row = table.rows[id+1];
        row.cells[1].innerHTML = row.cells[1].innerHTML.strike();
        row.cells[0].innerHTML = '<input type="text" name = "Lieux[' + id + '].Id" value = "-1" hidden />-1';
        row.cells[2].innerHTML = '<select style="max-width: 300px;" disabled />'
            + typesPanneauxOptions + '</select>';
        row.cells[3].innerHTML = '<input type="text" readonly/>';
        row.cells[4].innerHTML = '<input type="number" readonly/>';
        row.cells[5].innerHTML = '';


    }

    new MultipleSelect('#selectlieu', {
        placeholder: 'Choisissez un lieu'
    })

</script>
